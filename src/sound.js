import { zzfxP } from './zzfx';
import { zzfxM } from './zzfxm';

let myAudioNode = null;
let isPlaying = false;
let audioContext = zzfxX;
export const playDead = () => {
  zzfx(
    ...[1.1, , 229, , , 0.31, 4, 2.38, -0.7, -3, , , , 0.4, , 0.2, , 0.88, 0.01]
  ); // Hit 111
};
export const playBulletExplotion = () => {
  zzfx(
    ...[
      1.75,
      ,
      334,
      ,
      0.13,
      0.98,
      4,
      0.79,
      0.9,
      ,
      ,
      ,
      ,
      0.9,
      ,
      0.4,
      0.29,
      0.84,
      0.01,
      0.49,
    ]
  ); // Explosion 121
};
export const playSong = () => {
  isPlaying = true;
  if (myAudioNode) {
    audioContext.resume();
    return;
  }
  const song = [
    [[, 0, 400, , , 0.65]],
    [
      [
        [
          ,
          ,
          10,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          25,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
          10,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          25,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
          10,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          25,
          ,
          ,
          ,
          24,
          ,
          ,
          ,
          17,
          ,
          ,
          ,
        ],
        [
          ,
          1,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
        ],
        [
          ,
          -1,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
        ],
        [
          ,
          1,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
        ],
        [
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
          ,
        ],
      ],
    ],
    [0, 0],
    ,
    { title: 'New Song', instruments: ['Instrument 0'], patterns: ['Guitar'] },
  ];
  let mySongData = zzfxM(...song);

  myAudioNode = zzfxP(...mySongData);
  myAudioNode.loop = true;
  return;
};

export const stopSong = () => {
  isPlaying = false;
  audioContext.suspend();
};
export const toggleSond = () => {
  if (isPlaying) {
    stopSong();
  } else {
    playSong();
  }
};
